<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pagamento - Nebula Payments</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .payment-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            padding: 40px;
            max-width: 500px;
            width: 100%;
            text-align: center;
        }

        .logo {
            margin-bottom: 30px;
        }

        .logo h1 {
            color: #333;
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .logo .subtitle {
            color: #666;
            font-size: 16px;
        }

        .payment-amount {
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 30px;
        }

        .amount-label {
            font-size: 14px;
            opacity: 0.9;
            margin-bottom: 5px;
        }

        .amount-value {
            font-size: 36px;
            font-weight: 700;
        }

        .currency {
            font-size: 18px;
            opacity: 0.8;
        }

        .payment-form {
            text-align: left;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 600;
            font-size: 14px;
        }

        .form-group input {
            width: 100%;
            padding: 15px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }

        .phone-input {
            position: relative;
        }

        .phone-prefix {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
            font-weight: 600;
            z-index: 1;
            pointer-events: none;
        }

        .phone-input input {
            padding-left: 50px;
            position: relative;
            z-index: 2;
        }

        .provider-cards { display: grid; grid-template-columns: 1fr 1fr; gap: 12px; margin-bottom: 20px; }
        .provider-card { border: 1px solid #e9ecef; border-radius: 12px; padding: 14px; display: flex; align-items: center; gap: 12px; cursor: pointer; transition: all .2s ease; background: #f8f9fa; }
        .provider-card:hover { transform: translateY(-1px); box-shadow: 0 8px 16px rgba(0,0,0,.06); }
        .provider-card.active { border-color: #667eea; background: #eef0ff; }
        .provider-logo { width: 44px; height: 44px; border-radius: 10px; display: inline-flex; align-items: center; justify-content: center; overflow: hidden; background: #ffffff; border: 1px solid #e9ecef; }
        .provider-logo img { width: 100%; height: 100%; object-fit: contain; }
        .provider-logo.mpesa { background: #ffffff; }
        .provider-logo.emola { background: #ffffff; }
        .provider-text { color: #444; font-size: 14px; line-height: 1.3; }

        .pay-button {
            width: 100%;
            background: linear-gradient(135deg, #00a651, #008f45);
            color: white;
            border: none;
            padding: 18px;
            border-radius: 10px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .pay-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(0, 165, 81, 0.3);
        }

        .pay-button:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .loading {
            display: none;
            margin-left: 10px;
        }

        .spinner {
            border: 2px solid #ffffff;
            border-top: 2px solid transparent;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            display: inline-block;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        /* Popup Styles */
        .popup-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            animation: fadeIn 0.3s ease;
        }

        .popup-overlay.show {
            display: flex;
        }

        .popup {
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 400px;
            width: 90%;
            text-align: center;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            animation: slideIn 0.3s ease;
            position: relative;
        }

        .popup.success {
            border-top: 5px solid #4CAF50;
        }

        .popup.error {
            border-top: 5px solid #f44336;
        }

        .popup.info {
            border-top: 5px solid #2196F3;
        }

        .popup-icon {
            font-size: 48px;
            margin-bottom: 20px;
        }

        .popup-title {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 15px;
            color: #333;
        }

        .popup-message {
            font-size: 16px;
            color: #666;
            line-height: 1.5;
            margin-bottom: 25px;
        }

        .popup-button {
            background: #667eea;
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .popup-button:hover {
            background: #5a6fd8;
            transform: translateY(-2px);
        }

        .popup-close {
            position: absolute;
            top: 15px;
            right: 20px;
            background: none;
            border: none;
            font-size: 24px;
            color: #999;
            cursor: pointer;
            padding: 5px;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .popup-close:hover {
            background: #f5f5f5;
            color: #666;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideIn {
            from { 
                opacity: 0;
                transform: translateY(-50px) scale(0.9);
            }
            to { 
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .popup.show {
            display: flex;
        }

        .footer {
            margin-top: 30px;
            text-align: center;
            color: #666;
            font-size: 12px;
        }

        .helper-note {
            margin-bottom: 16px;
            color: #555;
            font-size: 13px;
            text-align: center;
        }
        .helper-note small { color: #777; }

        @media (max-width: 600px) {
            .payment-container {
                padding: 30px 20px;
                margin: 20px;
            }
            
            .amount-value {
                font-size: 28px;
            }
            .provider-cards { grid-template-columns: 1fr; gap: 10px; }
            .provider-card { padding: 12px; }
            .provider-logo { width: 40px; height: 40px; }
            .provider-text { font-size: 13px; }
            .pay-button { font-size: 16px; padding: 14px; }
            .logo h1 { font-size: 24px; }
            .logo .subtitle { font-size: 14px; }
            .form-group input { padding: 14px; font-size: 16px; }
            .form-group label { font-size: 13px; }
            .footer { font-size: 11px; }
        }

        /* Extra small phones */
        @media (max-width: 420px) {
            body { padding: 14px; }
            .payment-container { padding: 22px 16px; border-radius: 14px; }
            .payment-amount { padding: 16px; }
            .amount-label { font-size: 12px; }
            .amount-value { font-size: 26px; }
            .provider-cards { gap: 8px; }
            .provider-card { padding: 10px; }
            .provider-logo { width: 36px; height: 36px; }
            .provider-text { font-size: 12.5px; }
            .phone-prefix { left: 12px; }
            .phone-input input { padding-left: 46px; }
            .pay-button { padding: 13px; font-size: 15px; }
        }

        /* Very small devices */
        @media (max-width: 360px) {
            .logo h1 { font-size: 20px; }
            .logo .subtitle { font-size: 12px; }
            .amount-value { font-size: 24px; }
            .provider-text { font-size: 12px; }
            .pay-button { padding: 12px; font-size: 14px; }
        }
    </style>
</head>
<body>
    <div class="payment-container">
        <div class="logo">
            <h1>Nebula Payments</h1>
            <div class="subtitle">Gateway de Pagamento Seguro</div>
        </div>

        <div class="payment-amount">
            <div class="amount-label">Valor a Pagar</div>
            <div class="amount-value">
                <%= amount %> <span class="currency"><%= currency %></span>
            </div>
        </div>

        <div class="helper-note">
            Suportamos M-Pesa e e-Mola. Detectamos automaticamente pelo prefixo do seu número.
            <br><small>84/85 → M-Pesa, 86/87 → e-Mola</small>
        </div>
        <div class="provider-cards" id="providerCards">
            <div class="provider-card" id="card-mpesa" data-provider="mpesa">
                <div class="provider-logo mpesa"><img src="/images/mpesa.png" alt="M-Pesa" loading="lazy"></div>
                <div class="provider-text">
                    M-Pesa<br>
                    <small>Para números 84 e 85</small>
                </div>
            </div>
            <div class="provider-card" id="card-emola" data-provider="emola">
                <div class="provider-logo emola"><img src="/images/emola.webp" alt="e-Mola" loading="lazy"></div>
                <div class="provider-text">
                    e-Mola<br>
                    <small>Para números 86 e 87</small>
                </div>
            </div>
        </div>

        <form class="payment-form" id="paymentForm">
            <div class="form-group">
                <label for="phone">Número de Telefone</label>
                <div class="phone-input">
                    <span class="phone-prefix">+258</span>
                    <input 
                        type="tel" 
                        id="phone" 
                        name="phone" 
                        placeholder="8X XXX XXX" 
                        pattern="[0-9]{9}"
                        maxlength="9"
                        required
                        autocomplete="tel"
                        value=""
                    >
                </div>
            </div>

            <button type="button" class="pay-button" id="payButton">
                <span id="payLabel">Pagar</span>
                <span class="loading" id="loading">
                    <span class="spinner"></span>
                </span>
            </button>
        </form>

        <div class="footer">
            <p>Pagamento processado com segurança pela Nebula Payments</p>
            <p>© 2024 Nebula Payments. Todos os direitos reservados.</p>
            <div style="margin-top: 15px;">
            
            </div>
        </div>
    </div>

    <!-- Popups de Feedback -->
    <div class="popup-overlay" id="popupOverlay">
        <div class="popup" id="popup">
            <button class="popup-close" id="popupClose">&times;</button>
            <div class="popup-icon" id="popupIcon"></div>
            <div class="popup-title" id="popupTitle"></div>
            <div class="popup-message" id="popupMessage"></div>
            <button class="popup-button" id="popupButton">OK</button>
        </div>
    </div>

    <!-- Dados do pagamento para o JavaScript -->
    <script id="payment-data" type="application/json">
        {
            "paymentId": "<%= paymentId %>",
            "amount": <%= amount %>,
            "currency": "<%= currency %>",
            "returnUrl": "<%= returnUrl %>"
        }
    </script>

    <!-- JavaScript externo (cache-busting em dev) -->
    <script src="/js/payment-form.js?v=<%= Date.now() %>"></script>
    
    <!-- Error handling para JavaScript -->
    <script>
        console.log('🔍 Payment form template loaded');
        console.log('📁 Current URL:', window.location.href);
        console.log('🔧 Testing JavaScript file accessibility...');
        
        // Testar múltiplas rotas para o arquivo JavaScript
        const testRoutes = [
            '/js/payment-form.js',
            '/test-static/js/payment-form.js'
        ];
        
        testRoutes.forEach(route => {
            fetch(route)
                .then(response => {
                    if (response.ok) {
                        console.log(`✅ JavaScript file accessible via ${route}:`, response.status, response.statusText);
                        console.log('Content-Type:', response.headers.get('content-type'));
                    } else {
                        console.error(`❌ JavaScript file not accessible via ${route}:`, response.status, response.statusText);
                    }
                })
                .catch(error => {
                    console.error(`❌ Error fetching JavaScript file via ${route}:`, error);
                });
        });
        
        // Testar se o arquivo existe via debug route
        fetch('/debug/static')
            .then(response => response.json())
            .then(data => {
                console.log('🔍 Debug static info:', data);
            })
            .catch(error => {
                console.error('❌ Error fetching debug info:', error);
            });
        
        // Função para testar arquivos estáticos
        window.testStaticFiles = function() {
            console.log('🔧 Testing static files...');
            
            // Testar múltiplas rotas
            const testRoutes = [
                '/js/payment-form.js',
                '/test-static/js/payment-form.js',
                '/debug/static',
                '/list-files'
            ];
            
            testRoutes.forEach(route => {
                fetch(route)
                    .then(response => {
                        console.log(`✅ ${route}:`, response.status, response.statusText);
                        if (route.includes('.js')) {
                            console.log('Content-Type:', response.headers.get('content-type'));
                        }
                    })
                    .catch(error => {
                        console.error(`❌ ${route}:`, error);
                    });
            });
        };
        
        // Função para confirmar manualmente o pagamento
        window.confirmPaymentManually = function() {
            const paymentId = JSON.parse(document.getElementById('payment-data').textContent).paymentId;
            console.log('🔧 Confirmando pagamento manualmente:', paymentId);
            
            fetch(`/api/v1/payments/${paymentId}/confirm`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    console.log('✅ Pagamento confirmado manualmente:', result);
                    showSuccess('🎉 Pagamento confirmado manualmente! Redirecionando...', false);
                    
                    // Redirect after 3 seconds
                    setTimeout(() => {
                        const returnUrl = JSON.parse(document.getElementById('payment-data').textContent).returnUrl;
                        window.location.href = returnUrl;
                    }, 3000);
                } else {
                    console.error('❌ Erro ao confirmar pagamento:', result);
                    showError('❌ Erro ao confirmar pagamento: ' + result.message, true);
                }
            })
            .catch(error => {
                console.error('❌ Erro na confirmação manual:', error);
                showError('❌ Erro na confirmação manual do pagamento', true);
            });
        };
        
        window.addEventListener('error', function(e) {
            console.error('❌ JavaScript error:', e.error);
            console.error('📄 Error details:', {
                message: e.message,
                filename: e.filename,
                lineno: e.lineno,
                colno: e.colno
            });
        });
        
        // Verificar se o script foi carregado
        setTimeout(function() {
            if (typeof window.paymentFormLoaded === 'undefined') {
                console.error('❌ Payment form JavaScript failed to load!');
                console.log('🔍 Checking if script exists at:', '/js/payment-form.js');
                
                // Tentar carregar o script novamente
                const script = document.createElement('script');
                script.src = '/js/payment-form.js';
                script.onerror = function() {
                    console.error('❌ Failed to reload payment form JavaScript');
                };
                script.onload = function() {
                    console.log('✅ Payment form JavaScript reloaded successfully');
                };
                document.head.appendChild(script);
            }
        }, 2000);
    </script>
</body>
</html>
